// Generated by projen. To modify, edit .projenrc.ts and run "npx projen".
import type { Config } from 'jest';
import nextJest from 'next/jest.js'

const createJestConfig = nextJest({
  // Provide the path to your Next.js app to load next.config.js and .env files in your test environment
  dir: './',
})

// Add any custom config to be passed to Jest
const config: Config = {
  coverageProvider: 'v8',
  testEnvironment: 'jsdom',
  testMatch: [
    "<rootDir>/@(src|test)/**/*(*.)@(spec|test).ts?(x)",
    "<rootDir>/@(src|test)/**/__tests__/**/*.ts?(x)",
    "<rootDir>/@(projenrc)/**/*(*.)@(spec|test).ts?(x)",
    "<rootDir>/@(projenrc)/**/__tests__/**/*.ts?(x)"
  ],
  clearMocks: true,
  collectCoverage: true,
  coverageReporters: [
    "json",
    "lcov",
    "clover",
    "cobertura",
    "text"
  ],
  coverageDirectory: "coverage",
  coveragePathIgnorePatterns: [
    "/node_modules/"
  ],
  testPathIgnorePatterns: [
      "/node_modules/"
  ],
  watchPathIgnorePatterns: [
    "/node_modules/"
  ],
  reporters: [
    "default",
    [
      "jest-junit",
      {
        "outputDirectory": "test-reports"
      }
    ]
  ],
  transform: {
    "^.+\.[t]sx?$": [
      "ts-jest",
      {
        "tsconfig": "tsconfig.dev.json"
      }
    ]
  },
  // A list of paths to modules that run some code to configure or set up the testing framework before each test
  setupFilesAfterEnv: ['@testing-library/jest-dom/extend-expect'],
  moduleNameMapper: {
    // ...
    '^@/(.*)$': '<rootDir>/$1',
  },
  // Automatically clear mock calls and instances between every test
  globals: {
    'ts-jest': {
      TsConfig: 'tsconfig.test.json',
    },
  },
}

// createJestConfig is exported this way to ensure that next/jest can load the Next.js config which is async
export default createJestConfig(config)
